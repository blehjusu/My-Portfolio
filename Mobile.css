body {
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: auto 1fr auto; /* This lines helps the footer stay at the bottom of the screen */
    grid-template-areas: 
    "header"
    "nav"
    "main"
    "aside"
    "footer";
    height: 100%;
}

aside {
    display: flex; /* added flex here so the images align evenly down the screen */
    background: linear-gradient(to right, #31151c, #000000);
    grid-area: aside;
    padding: 2em;
    width: auto;
    flex-direction: column;  /* want my items to flex vertically */
    justify-content: space-around;
    height: auto; /* adding auto helped stop the aside bar from overlfowing */  
}

main img {
    width: 100%;         
    max-width: 20px;   
    height: auto;
}

main {
    display: flex;  /* display flex so I can edit the size of the images in the main */
    flex-direction: column;   
    align-items: center;         /* i wanted all the items in the main to be centered */
    justify-content: center;
    color: white;
    grid-area: main;
    width: auto;
    padding: 5em;
    background: linear-gradient(to right, #000000, #31151c);
    align-items: center;
    justify-content: center;    
    height: 100vh;
}

.showNav {
    height: 0.8em;
    width: 1.25em;
    display: block;
    border-top: 0.2em solid white;
    border-bottom: 0.2em solid white;
    position: relative; /* Create a reference for absolute positioning */
}

.showNav::before {
    content: '';
    position: absolute;
    top: 50%; /* this helps it to be positioned in the middle */
    left: 0;
    width: 1.25em;
    height: 0.2em; /* without this line, the line in the middle was not evenly aligned */
    background-color: white; 
    transform: translateY(-50%); 
}

nav {
    display: block;
    background-color: yellow;
    position: fixed;
    top: 0;
    left: 50%;
    width: 50%;
    height: 100vh;
}
